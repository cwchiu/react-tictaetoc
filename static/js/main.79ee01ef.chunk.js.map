{"version":3,"sources":["logo.svg","containers/TicTacToe/constants.js","containers/TicTacToe/Styled.js","containers/StyleConstants.js","containers/TicTacToe/components/Cross/Styled.js","containers/TicTacToe/components/Cross/index.js","containers/TicTacToe/components/Circle/Styled.js","containers/TicTacToe/components/Circle/index.js","containers/TicTacToe/utils.js","containers/TicTacToe/components/Selection/index.js","containers/TicTacToe/components/ToggleSwitchBtn/Styled.js","containers/TicTacToe/components/ToggleSwitchBtn/index.js","containers/TicTacToe/components/InfoBoard/Styled.js","containers/TicTacToe/components/InfoBoard/index.js","containers/TicTacToe/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GAME_SCALE_OPTIONS","WINNER_CONDITION_OPTIONS","winnerBackground","keyframes","crossMixin","gameScale","angle","StyledTicTacToe","styled","div","props","scaleFactor","StyledCross","theme","Cross","className","defaultProps","StyledCircle","Circle","Block","id","owner","this","initBlocks","WIN_CASE","Selection","options","handleOnSelect","onChange","map","option","key","value","StyledToggleSwitchBtn","isSinglePlay","ToggleSwitchBtn","handleOnToggleSwitchClick","circleStyle","onClick","StyledInfoBoard","showContent","InfoBoard","currentRole","isWin","isGameFinished","winner","INIT_WIN_STATE","TicTacToe","setting","useState","setWin","blocks","setBlocks","setCurrentRole","setSinglePlay","handleClick","event","currentTarget","getAttribute","i","length","block","hasOwner","useEffect","console","log","item","sum","filter","includes","reduce","c","Math","abs","checkWin","data-id","draw","App","winnerCondition","isSinglePlayer","setSetting","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.79ee01ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export const KEY_REDUCER = 'TICTACTOE';\r\n\r\nexport const INIT = `${KEY_REDUCER}/INIT`;\r\nexport const SET_BLOCK_VALUE = `${KEY_REDUCER}/SET_BLOCK_VALUE`;\r\nexport const SET_GAME_SCALE = `${KEY_REDUCER}/SET_GAME_SCALE`;\r\nexport const SET_WINNER_CONDITION = `${KEY_REDUCER}/SET_WINNER_CONDITION`;\r\nexport const SET_WINNER = `${KEY_REDUCER}/SET_WINNER`;\r\nexport const SET_IS_SINGLE_PLAYER = `${KEY_REDUCER}/SET_IS_SINGLE_PLAYER`\r\n\r\nexport const NOUSE = \"\";\r\nexport const CIRCLE = 1;\r\nexport const CROSS = -1;\r\nexport const TOGGLE = -1;\r\nexport const PLAYER_1 = CIRCLE;\r\n\r\nexport const GAME_WRAPPER_SIZE = 600;\r\nexport const DEFAULT_GAME_SCALE = 3;\r\nexport const DEFAULT_WINNER_CONDITION = 3;\r\n\r\nexport const GAME_SCALE_OPTIONS = [3, 4];\r\nexport const WINNER_CONDITION_OPTIONS = [3,4];","import styled, { keyframes } from 'styled-components';\r\nimport {\r\n    THEME,\r\n    THEME_DARKEN,\r\n    BACKGROUND_COLOR,\r\n} from '../../containers/StyleConstants';\r\nimport {\r\n    GAME_WRAPPER_SIZE,\r\n} from './constants';\r\n\r\nconst winnerBackground = keyframes`\r\n    from {\r\n        background: ${THEME_DARKEN};\r\n    }\r\n    to {\r\n        background: ${THEME};\r\n    }\r\n`;\r\n\r\nconst crossMixin = (gameScale, angle) => `\r\n    content: '';\r\n    border-radius: 10px;\r\n    width: 110%;\r\n    background: black;\r\n    position: absolute;\r\n    height: ${ 4.5 / gameScale}em;\r\n    transform: rotate(${angle}deg);\r\n`;\r\n\r\nexport const StyledTicTacToe = styled.div`\r\n    .tic-tac-toe__blocks-wrapper {\r\n        width: ${GAME_WRAPPER_SIZE}px;\r\n        height: ${GAME_WRAPPER_SIZE}px;\r\n        @media only screen and (max-width: 600px) {\r\n            width: calc(100vw - 20px);\r\n            height: calc(100vw - 20px);\r\n        }\r\n        display: grid;\r\n        ${(props) => {\r\n        const gameScale = props.gameScale;\r\n        return `\r\n                grid-template-columns: repeat(${gameScale}, 1fr);\r\n                grid-template-rows: repeat(${gameScale}, 1fr);\r\n                grid-gap: ${45 / gameScale}px ${45 / gameScale}px;\r\n            `;\r\n    }}\r\n    }\r\n    .tic-tac-toe__item {\r\n        outline: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: white;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: ${THEME};\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: ${THEME_DARKEN};\r\n        }\r\n    }\r\n    .tic-tac-toe__item-win {\r\n        animation: ${winnerBackground} 0.5s linear infinite alternate;\r\n    }\r\n    .tic-tac-toe__cross-wrapper {\r\n        height: 80%;\r\n        width: 80%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .cross {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100%;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            &:before {\r\n                ${(props) => {\r\n        const gameScale = props.gameScale;\r\n        return crossMixin(gameScale, 45);\r\n    }}\r\n            }\r\n            &:after {\r\n                ${(props) => {\r\n        const gameScale = props.gameScale;\r\n        return crossMixin(gameScale, -45);\r\n    }}\r\n            }\r\n        }\r\n    }\r\n    .tic-tac-toe__restart-btn {\r\n        font-family: 'Rammetto One', cursive;\r\n        width: 100%;\r\n        line-height: 50px;\r\n        font-size: 1.5em;\r\n        letter-spacing: 1px;\r\n        background: white;\r\n        cursor: pointer;\r\n        outline: none;\r\n        margin: 10px 0px;\r\n        padding: 5px 0px;\r\n        border-radius: 5px;\r\n        border: none;\r\n        transition: all 0.25s ease-out;\r\n        &:hover {\r\n            box-shadow: 0 10px 20px 0 ${BACKGROUND_COLOR};\r\n            transform: translateY(-1px);\r\n            color: ${THEME_DARKEN};\r\n        }\r\n    }\r\n    .tic-tac-toe__setting-group-wrapper {\r\n        display: none;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-template-rows: repeat(2, 40px);\r\n        justify-content: space-between;\r\n        font-family: 'Rammetto One', cursive;\r\n        margin-bottom: 10px;\r\n    }\r\n    .tic-tac-toe__setting-group {\r\n        display: flex;\r\n        align-items: center;\r\n        text-shadow: 2px 0px white;\r\n        font-size: 1.2em;\r\n        @media only screen and (max-width: 600px) {\r\n            font-size: 0.9em;\r\n        }\r\n        span {\r\n            margin-right: 5px;\r\n        }\r\n        select {\r\n            font-size: 1.2em;\r\n            outline: none;\r\n            background: white;\r\n        }\r\n    }\r\n`;","export const THEME = '#ff99ab';\r\nexport const THEME_DARKEN = '#ff4f6e';\r\nexport const BACKGROUND_COLOR = '#e2a900';","import styled from 'styled-components';\r\n\r\nconst crossMixin = (scaleFactor, angle) => `\r\n    content: '';\r\n    border-radius: 10px;\r\n    width: 110%;\r\n    background: black;\r\n    position: absolute;\r\n    height: ${ 4.5 / scaleFactor }em;\r\n    transform: rotate(${angle}deg);\r\n`;\r\n\r\nexport const StyledCross = styled.div`\r\n    width: 80%;\r\n    height: 80%;\r\n    .cross__cross {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        &:before {\r\n            ${(props) => {\r\n                return crossMixin(props.theme.scaleFactor, 45);\r\n            }}\r\n        }\r\n        &:after {\r\n            ${(props) => {\r\n                return crossMixin(props.theme.scaleFactor, -45);\r\n            }}\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    StyledCross,\r\n} from './Styled';\r\n\r\nconst Cross = ({ theme }) => (\r\n    <StyledCross theme={theme}>\r\n        <span className=\"cross__cross\" />\r\n    </StyledCross>\r\n);\r\n\r\nCross.propTypes = {\r\n    theme: PropTypes.object,\r\n    handleOnToggleSwitchClick: PropTypes.func,\r\n};\r\n\r\nCross.defaultProps = {\r\n    theme: null,\r\n};\r\n\r\nexport default Cross;","import styled from 'styled-components';\r\n\r\nexport const StyledCircle = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 80%;\r\n    width: 80%;\r\n    .circle__circle {\r\n        width: 100%;\r\n        height: 100%;\r\n        ${(props) => {\r\n            return `\r\n                border: ${ 4.5 / props.theme.scaleFactor }em solid white;\r\n            `;\r\n        }}\r\n        box-sizing: border-box;\r\n        border-radius: 100%;\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    StyledCircle,\r\n} from './Styled';\r\n\r\nconst Circle = ({ theme }) => (\r\n    <StyledCircle theme={theme}>\r\n        <span className=\"circle__circle\" />\r\n    </StyledCircle>\r\n);\r\n\r\nCircle.propTypes = {\r\n    theme: PropTypes.object,\r\n    handleOnToggleSwitchClick: PropTypes.func,\r\n};\r\n\r\nCircle.defaultProps = {\r\n    theme: null,\r\n};\r\n\r\nexport default Circle;","import { CIRCLE, CROSS } from \"./constants\";\r\nimport React from \"react\";\r\nimport Cross from \"./components/Cross/index\";\r\nimport Circle from \"./components/Circle/index\";\r\n\r\nexport class Block {\r\n  constructor(id, owner = 0) {\r\n    this.id = id;\r\n    this.owner = owner;\r\n  }\r\n\r\n  hasOwner() {\r\n    return this.owner !== 0;\r\n  }\r\n\r\n  draw() {\r\n    const theme = {\r\n      scaleFactor: 5\r\n    };\r\n\r\n    if (this.owner === CIRCLE) {\r\n      return <Circle theme={theme} />;\r\n    } else if (this.owner === CROSS) {\r\n      return <Cross theme={theme} />;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const initBlocks = () => [\r\n  new Block(0),\r\n  new Block(1),\r\n  new Block(2),\r\n\r\n  new Block(3),\r\n  new Block(4),\r\n  new Block(5),\r\n\r\n  new Block(6),\r\n  new Block(7),\r\n  new Block(8)\r\n];\r\n\r\nconst WIN_CASE = [\r\n  // 橫向\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  // 縱向\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  // 右斜\r\n  [2, 4, 6],\r\n  // 左斜\r\n  [0, 4, 8]\r\n];\r\n\r\nexport const checkWin = (blocks) => {\r\n\r\n  for (let item of WIN_CASE) {\r\n    const sum = blocks.filter(block => item.includes(block.id)).reduce((c, block) => c + block.owner, 0);\r\n\r\n    if (Math.abs(sum) === 3) {\r\n      return sum > 0 ? CIRCLE : CROSS;\r\n    }\r\n\r\n  }\r\n  return 0;\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Selection = ({ options, handleOnSelect }) => (\r\n    <select onChange={handleOnSelect}>\r\n        {\r\n            options.map((option) => (\r\n                <option\r\n                    key={option}\r\n                    value={option}\r\n                >\r\n                    {option}\r\n                </option>\r\n            ))\r\n        }\r\n    </select>\r\n);\r\n\r\nSelection.propTypes = {\r\n    options: PropTypes.array,\r\n    handleOnSelect: PropTypes.func\r\n};\r\n\r\nexport default Selection;","import styled from 'styled-components';\r\nimport {\r\n    THEME_DARKEN,\r\n} from '../../../../containers/StyleConstants';\r\n\r\nexport const StyledToggleSwitchBtn = styled.div`\r\n    .tic-tac-toe__toggle-switch-btn-container {\r\n        position: relative;\r\n        ${(props) => {\r\n            return props.isSinglePlay ?\r\n                `background: ${THEME_DARKEN};` : `background: #878787;`;\r\n        }}\r\n        width: 50px;\r\n        height: 25px;\r\n        border-radius: 20px;\r\n        padding: 4px;\r\n        cursor: pointer;\r\n        border: 2px solid white;\r\n        transition: all 0.15s ease-out;\r\n    }\r\n    .tic-tac-toe__toggle-switch-btn-circle {\r\n        position: relative;\r\n        width: 50%;\r\n        height: 100%;\r\n        background: white;\r\n        top: 50%;\r\n        transform: translateY(-50%) translateX(100%);\r\n        border-radius: 100%;\r\n        right: 0px;\r\n        transition: all 0.15s ease-out;\r\n    }\r\n    .tic-tac-toe__toggle-switch-btn-circle-left {\r\n        position: relative;\r\n        width: 50%;\r\n        height: 100%;\r\n        background: white;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        border-radius: 100%;\r\n        right: 0px;\r\n        transition: all 0.15s ease-out;\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    StyledToggleSwitchBtn,\r\n} from './Styled';\r\n\r\nconst ToggleSwitchBtn = ({ isSinglePlay, handleOnToggleSwitchClick }) => {\r\n    const circleStyle = isSinglePlay ?\r\n        'tic-tac-toe__toggle-switch-btn-circle' : 'tic-tac-toe__toggle-switch-btn-circle-left';\r\n    return (\r\n        <StyledToggleSwitchBtn isSinglePlay={isSinglePlay} onClick={handleOnToggleSwitchClick}>\r\n            <div className=\"tic-tac-toe__toggle-switch-btn-container\">\r\n                <div className={circleStyle} />\r\n            </div>\r\n        </StyledToggleSwitchBtn>\r\n    )\r\n};\r\n\r\nToggleSwitchBtn.propTypes = {\r\n    isSinglePlay: PropTypes.bool,\r\n    handleOnToggleSwitchClick: PropTypes.func,\r\n};\r\n\r\nToggleSwitchBtn.defaultProps = {\r\n    isSinglePlay: true,\r\n    handleOnToggleSwitchClick: () => {},\r\n};\r\n\r\nexport default ToggleSwitchBtn;","import styled from 'styled-components';\r\n\r\nconst SIZE = 100;\r\n\r\nexport const StyledInfoBoard = styled.div`\r\n    height: ${SIZE}px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: #ffffff5e;\r\n    margin: 10px 0px;\r\n    font-weight: 900;\r\n    text-shadow: 2px 0px white;\r\n    .info-board__content-wrapper {\r\n        height: ${SIZE}px;\r\n        width: ${SIZE}px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .info-board__label {\r\n        font-size: 3em;\r\n        @media only screen and (max-width: 600px) {\r\n            font-size: 2em;\r\n        }\r\n        letter-spacing: 15px;\r\n        margin: 0px 20px;\r\n    }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Circle from \"../Circle\";\r\nimport Cross from \"../Cross\";\r\nimport { CIRCLE, CROSS, PLAYER_1 } from \"../../constants\";\r\nimport { StyledInfoBoard } from \"./Styled\";\r\n//import gtag from '../../../../utils/tracking';\r\n\r\nconst showContent = value => {\r\n  const theme = {\r\n    scaleFactor: 5\r\n  };\r\n  if (value === CIRCLE) {\r\n    return <Circle theme={theme} />;\r\n  } else if (value === CROSS) {\r\n    return <Cross theme={theme} />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst InfoBoard = ({ currentRole, isWin }) => {\r\n  if (isWin.isGameFinished) {\r\n    if (isWin.winner) {\r\n      //const role = isWin.get('winner') === CIRCLE ? 'CIRCLE' :'CROSS';\r\n      //gtag('event', 'InfoBoard', {\r\n      //'event_category': `${role} win`,\r\n      //  'event_label': isWin.get('winCaseArr').toJS(),\r\n      //});\r\n      return (\r\n        <StyledInfoBoard>\r\n          <span className=\"info-board__label\">獲勝者是</span>\r\n          <div className=\"info-board__content-wrapper\">\r\n            {showContent(isWin.winner)}\r\n          </div>\r\n        </StyledInfoBoard>\r\n      );\r\n    }\r\n    // gtag('event', 'InfoBoard', {\r\n    //  'event_category': '平手',\r\n    //  'event_label': isWin.get('winCaseArr').toJS(),\r\n    //});\r\n    return (\r\n      <StyledInfoBoard>\r\n        <span className=\"info-board__label\">平手</span>\r\n      </StyledInfoBoard>\r\n    );\r\n  }\r\n  return (\r\n    <StyledInfoBoard>\r\n      <span className=\"info-board__label\">輪到</span>\r\n      <div className=\"info-board__content-wrapper\">\r\n        {showContent(currentRole)}\r\n      </div>\r\n    </StyledInfoBoard>\r\n  );\r\n};\r\n\r\nInfoBoard.propTypes = {\r\n  currentRole: PropTypes.number,\r\n  isWin: PropTypes.object\r\n};\r\n\r\nInfoBoard.defaultProps = {\r\n  currentRole: PLAYER_1,\r\n  isWin: null\r\n};\r\n\r\nexport default InfoBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { StyledTicTacToe } from \"./Styled\";\r\nimport { NOUSE, CROSS, TOGGLE, GAME_SCALE_OPTIONS, WINNER_CONDITION_OPTIONS } from \"./constants\";\r\nimport { initBlocks, checkWin } from \"./utils\";\r\nimport Selection from './components/Selection';\r\nimport ToggleSwitchBtn from './components/ToggleSwitchBtn';\r\nimport InfoBoard from \"./components/InfoBoard\";\r\nconst INIT_WIN_STATE = {\r\n  isGameFinished: false,\r\n  winner: NOUSE\r\n};\r\nconst TicTacToe = ({ setting }) => {\r\n  const { gameScale } = setting;\r\n  const [isWin, setWin] = useState(INIT_WIN_STATE);\r\n  const [blocks, setBlocks] = useState(initBlocks());\r\n  const [currentRole, setCurrentRole] = useState(CROSS);\r\n  const [isSinglePlay, setSinglePlay] = useState(false);\r\n\r\n  const handleOnRestartClick = () => {\r\n    setCurrentRole(CROSS);\r\n\r\n    setBlocks(initBlocks());\r\n\r\n    setWin(INIT_WIN_STATE);\r\n  };\r\n\r\n  const handleOnToggleSwitchClick = () => {\r\n    setSinglePlay(!isSinglePlay);\r\n  };\r\n\r\n  const handleOnWinnerConditionSelected = () => {\r\n\r\n  };\r\n\r\n  const handleOnGameScaleSelected = () => {\r\n\r\n  };\r\n\r\n  const handleClick = event => {\r\n    if (isWin.isGameFinished) {\r\n      return;\r\n    }\r\n    const id = +event.currentTarget.getAttribute(\"data-id\");\r\n\r\n    for (let i = 0; i < blocks.length; ++i) {\r\n      let block = blocks[i];\r\n      if (block.id === id && !block.hasOwner()) {\r\n        blocks[i].owner = currentRole;\r\n\r\n        setCurrentRole(currentRole * TOGGLE);\r\n        setBlocks(blocks);\r\n\r\n\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('#1');\r\n    const winner = checkWin(blocks);\r\n    if (winner !== 0) {\r\n      setWin({\r\n        isGameFinished: true,\r\n        winner: winner\r\n      });\r\n    } else {\r\n      const sum = blocks.reduce((c, block) => {\r\n        return c + (block.hasOwner() ? 1 : 0);\r\n      }, 0);\r\n      const gameEnd = sum === gameScale * gameScale;\r\n      if (gameEnd) {\r\n        setWin({\r\n          isGameFinished: true,\r\n          winner: \"\"\r\n        });\r\n      }\r\n\r\n    }\r\n  }, [blocks, currentRole]);\r\n\r\n\r\n\r\n  return (\r\n    <StyledTicTacToe gameScale={gameScale}>\r\n      <div>\r\n        <InfoBoard currentRole={currentRole} isWin={isWin} />\r\n      </div>\r\n      <div className=\"tic-tac-toe__blocks-wrapper\">\r\n        {blocks.map(block => (\r\n          <div\r\n            className=\"tic-tac-toe__item\"\r\n            key={block.id}\r\n            data-id={block.id}\r\n            onClick={handleClick}\r\n          >\r\n            {block.draw()}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"tic-tac-toe__restart-btn\"\r\n        onClick={handleOnRestartClick}\r\n      >\r\n        Restart\r\n      </button>\r\n\r\n      <div className=\"tic-tac-toe__setting-group-wrapper\">\r\n        <div className=\"tic-tac-toe__setting-group\">\r\n\r\n          <span>Scale</span>\r\n          <Selection options={GAME_SCALE_OPTIONS} handleOnSelect={handleOnGameScaleSelected} />\r\n        </div>\r\n        <div className=\"tic-tac-toe__setting-group\">\r\n\r\n          <span>Condition</span>\r\n          <Selection options={WINNER_CONDITION_OPTIONS} handleOnSelect={handleOnWinnerConditionSelected} />\r\n        </div>\r\n        <div className=\"tic-tac-toe__setting-group\">\r\n\r\n          <span>Single Play</span>\r\n          <ToggleSwitchBtn isSinglePlay={isSinglePlay} handleOnToggleSwitchClick={handleOnToggleSwitchClick} />\r\n        </div>\r\n      </div>\r\n    </StyledTicTacToe>\r\n  );\r\n};\r\n\r\nTicTacToe.propTypes = {\r\n  setting: PropTypes.object,\r\n};\r\n\r\nexport default TicTacToe;\r\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TicTacToe from \"./containers/TicTacToe\";\nfunction App() {\n  const [setting, setSetting] = useState({\n    gameScale: 3,\n    winnerCondition: 3,\n    isSinglePlayer: true\n  });\n  return (\n    <div className=\"App\">\n            <TicTacToe\n        setting={setting}\n        setSetting={setSetting}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}